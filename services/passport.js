const passport = require("passport");
const GoogleStrategy = require("passport-google-oauth20").Strategy;
const mongoose = require("mongoose");
const keys = require("../config/keys");

const User = mongoose.model("users");

passport.serializeUser((user, done) => {
  // This is not a profile ID, it is  an ID automatically generated by
  // MongoDB
  done(null, user.id);
});

// We are taking the ID that we previous stored as cookie
// and turning it back into User Model
passport.deserializeUser((id, done) => {
  // Turning the ID back to a MongoDB User instance
  User.findById(id).then(user => {
    done(null, user);
  });
});

/***
Enabling Cookies in the application to manage authentication.
**/

passport.use(
  new GoogleStrategy(
    {
      clientID: keys.googleClientID,
      clientSecret: keys.googleClientSecret,
      callbackURL: "/auth/google/callback"
    },
    (accessToken, refreshToken, profile, done) => {
      User.findOne({ googleId: profile.id }).then(existingUser => {
        if (existingUser) {
          //  we already have a record with given profile ID
          done(null, existingUser);
        } else {
          // we don't have a user record with the given profile ID
          new User({ googleId: profile.id })
            .save()
            .then(user => done(null, user));
        }
      });
    }
  )
);
